este es el create

import React, { useState } from "react";
import { Button,Form } from 'semantic-ui-react';
import axios from "axios";
import { useHistory } from "react-router";

export default function CreateClientes() {
  let history = useHistory();
  const [nombre, setFirstName] = useState('');
  const [apellido, setLastName] = useState('');
  const [fechaNacimiento, setFechaNacimiento] = useState('');
  const [direccion, setDireccion] = useState('');
  const [celular, setCelular] = useState('');
  const [correoElectronico, setCorreoElectronico] = useState('');
  const [empresa, setEmpresa] = useState('');

  const [error, setError] = useState('');

  const postData = () => {
    axios.post(`http://localhost:8001/api/Clientes`, {
      nombre,
      apellido,
      fechaNacimiento,
      direccion,
      celular,
      correoElectronico,
      empresa,
      error
    }).then(() => {
        history.push('/readClientes');
      })
      .catch((error) => {
        console.error('Error al crear el elemento:', error);
        setError('Error al crear el elemento. Por favor, inténtalo de nuevo.');
      });
  };

  return (
    <div>
      <Form className="create-form">
        <Form.Field>
          <label>Nombre</label>
          <input placeholder="Nombre" value={nombre} onChange={(e) => setFirstName(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>Apellido</label>
          <input placeholder="Apellido" value={apellido} onChange={(e) => setLastName(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>fechaNacimiento</label>
          <input placeholder="FechaNacimiento" value={fechaNacimiento} onChange={(e) => setFechaNacimiento(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>Direccion</label>
          <input placeholder="Direccion" value={direccion} onChange={(e) => setDireccion(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>Celular</label>
          <input placeholder="Celular" value={celular} onChange={(e) => setCelular(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>Correo Electronico</label>
          <input placeholder="CorreoElectronico" value={correoElectronico} onChange={(e) => setCorreoElectronico(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>Empresa</label>
          <input placeholder="Empresa" value={empresa} onChange={(e) => setEmpresa(e.target.value)} ></input>
        </Form.Field>
        <Button type="submit" onClick={postData}>Crear</Button>
      </Form>
    </div>
  );
}

este es el read
import axios from 'axios';
import '../../css/nav.css'
import logo1 from '../../css/logo1.png'
import React, { useEffect, useState } from 'react';
import { Table, Button } from 'semantic-ui-react';
import { Link } from 'react-router-dom';

export default function ReadClientes() {
  const [APIData, setAPIData] = useState([]);
  useEffect(() => {
    axios
      .get(`http://localhost:8001/api/Clientes`)
      .then((response) => {
        console.log(response.data);
        setAPIData(response.data);
      });
  }, []);

  const setData = (data) => {
    let { _id, nombre, apellido,fechaNacimiento ,direccion,celular,empresa,correoElectronico } = data;
    localStorage.setItem('ID', _id);
    localStorage.setItem('Nombre', nombre);
    localStorage.setItem('Apellido', apellido);
    localStorage.setItem('FechaNacimiento', fechaNacimiento );
    localStorage.setItem('Direccion', direccion);
    localStorage.setItem('Celular', celular);
    localStorage.setItem('Empresa', empresa);
    localStorage.setItem('CorreoElectronico', correoElectronico);
  };

  const getData = () => {
    axios.get(`http://localhost:8001/api/Clientes`).then((getData) => {
      setAPIData(getData.data);
    });
  };

  const onDelete = (_id) => {
    axios.delete(`http://localhost:8001/api/Clientes/${_id}`)
      .then(() => {
        getData();
      })
      .catch((error) => {
        console.error('Error al eliminar el elemento:', error);
      });
  };

  return (
    <div>
      <nav className='nav' >       
       <h1>Gestion Empresarial</h1>
       <img className='imagen' src={logo1} alt="Descripción de la imagen" />        
       <a  ><Link className='a' to="/readClientes"> Clientes</Link></a>
        <a  ><Link className='a' to="/readInventario"> Inventario</Link></a>
        <a  ><Link className='a' to="/read"> Empleados</Link></a>
        <a  ><Link className='a' to="/readProyectos"> Proyectos</Link></a>
        <a  ><Link className='a' to="/readEmpresas"> Empresas</Link></a>
        <a  ><Link className='a' to="/readUsuarios"> Usuarios</Link></a>


      </nav>
      <Table className='Table1' singleLine>
        <Table.Header>
          <Table.Row>
            <Table.HeaderCell className='small-header1' >Nombre</Table.HeaderCell>
            <Table.HeaderCell className='small-header1' >Apellido</Table.HeaderCell>
            <Table.HeaderCell className='small-header1' >FechaNacimiento</Table.HeaderCell>
            <Table.HeaderCell className='small-header1' >Direccion</Table.HeaderCell>
            <Table.HeaderCell className='small-header1' >celular</Table.HeaderCell>
            <Table.HeaderCell className='small-header1' >Empresa</Table.HeaderCell>
            <Table.HeaderCell className='small-header1' >correoElectronico</Table.HeaderCell>
            <Table.HeaderCell className='small-header1' >Actualizar</Table.HeaderCell>
            <Table.HeaderCell className='small-header1' >Eliminar</Table.HeaderCell>
          </Table.Row>
        </Table.Header>
        <Table.Body>
          {APIData.map((data) => (
            <Table.Row key={data._id}>
              <Table.Cell className='casilla1' >{data.nombre}</Table.Cell>
              <Table.Cell className='casilla1' >{data.apellido}</Table.Cell>
              <Table.Cell className='casilla1' >{data.fechaNacimiento }</Table.Cell>
              <Table.Cell className='casilla1' >{data.direccion}</Table.Cell>
              <Table.Cell className='casilla1' >{data.celular}</Table.Cell>
              <Table.Cell className='casilla1' >{data.empresa}</Table.Cell>
              <Table.Cell className='casilla1' >{data.correoElectronico}</Table.Cell>
              <Table.Cell>
                <Link to="/updateClientes">
                  <Button className='boton1' onClick={() => setData(data)}>Update</Button>
                </Link>
              </Table.Cell>
              <Table.Cell>
                <Button className='boton1' onClick={() => onDelete(data._id)}>Eliminar</Button>
              </Table.Cell>
            </Table.Row>
          ))}
        </Table.Body>
      </Table>
    </div>
  );
}


este es el updateClientes
import React, { useState, useEffect } from "react";
import { Button, Checkbox, Form } from 'semantic-ui-react';
import axios from "axios";
import { useHistory } from "react-router";

export default function UpdateClientes() {
  let history = useHistory();
  const [_id, setID] = useState(null);
  const [nombre, setFirstName] = useState('');
  const [apellido, setLastName] = useState('');
  const [fechaNacimiento, setFechaNacimiento] = useState('');
  const [direccion, setDireccion] = useState('');
  const [celular, setCelular] = useState('');
  const [correoElectronico, setCorreoElectronico] = useState('');
  const [empresa, setEmpresa] = useState('');
  const [checkbox, setCheckbox] = useState(false);
  useEffect(()=>{
    setID(localStorage.getItem('ID'));
    setFirstName(localStorage.getItem('Nombre'));
    setLastName(localStorage.getItem('Apelllido'));
    setFechaNacimiento(localStorage.getItem('FechaNacimiento'));
    setDireccion(localStorage.getItem('Direccion'));
    setCelular(localStorage.getItem('Celular'));
    setCorreoElectronico(localStorage.getItem('CorreoElectronico'));
    setEmpresa(localStorage.getItem('Empresa'));

},[]);

const updateAPIData = ()=>{
  axios.put(`http://localhost:8001/api/Clientes/${_id}`,
  {
      nombre,
      apellido,
      fechaNacimiento,
      direccion,
      celular,
      correoElectronico,
      empresa,
      checkbox,
  }
  ).then(()=>{
    history.push('/readClientes');
  })
}

  return (
    <div>
      <Form className="create-form">
        <Form.Field>
          <label>Nombre</label>
          <input placeholder="Nombre" value={nombre} onChange={(e) => setFirstName(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>Apellido</label>
          <input placeholder="Apellido" value={apellido} onChange={(e) => setLastName(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>fechaNacimiento</label>
          <input placeholder="FechaNacimiento" value={fechaNacimiento} onChange={(e) => setFechaNacimiento(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>Direccion</label>
          <input placeholder="Direccion" value={direccion} onChange={(e) => setDireccion(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>Celular</label>
          <input placeholder="Celular" value={celular} onChange={(e) => setCelular(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>Correo Electronico</label>
          <input placeholder="CorreoElectronico" value={correoElectronico} onChange={(e) => setCorreoElectronico(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <label>Empresa</label>
          <input placeholder="Empresa" value={empresa} onChange={(e) => setEmpresa(e.target.value)} ></input>
        </Form.Field>
        <Form.Field>
          <Checkbox label="Acepto los términos y condiciones:" checked={checkbox} onChange={() => setCheckbox(!checkbox)} ></Checkbox>
        </Form.Field>
        <Button type="submit" onClick={updateAPIData}>Actualizar</Button>
      </Form>
    </div>
  );

  	
0	
_id	"65132382ec6a0291cb8ab725"
nombre	"ejkshij si"
descripcion	"Guantes de alto osjbigjbij para un agarre óptimo."
precio	"1970-01-01T00:00:00.080Z"
modelo_moto_compatible	
0	
marca	"oufhi"
modelo	"gdgbdfb 821"
cilindraje	821
anio	2021
precio	14000
tipo_motor	"L-Twin"
descripcion	"Una moto naked deportiva con estilo italiano."
imagenes	
0	"monster_821_1.jpg"
1	"monster_821_2.jpg"
comentarios	[]
_id	"651f46765cf19ba72d4e6408"
1	
marca	"BMW"
modelo	"R 1250 GS"
cilindraje	1254
anio	2021
precio	22000
tipo_motor	"Boxer"
descripcion	"Una moto de aventura con tecnología avanzada."
imagenes	
0	"r_1250_gs_1.jpg"
1	"r_1250_gs_2.jpg"
comentarios	[]
_id	"651f46765cf19ba72d4e6409"
updatedAt	"2023-10-05T23:27:50.232Z"
1	
_id	"65132382ec6a0291cb8ab724"
nombre	"Chaqueta de Cuero"
descripcion	"Chaqueta de cuero resistente y elegante para motociclistas."
precio	"1970-01-01T00:00:00.350Z"
modelo_moto_compatible	
0	null
1	
_id	"65130ee5ec6a0291cb8ab6ef"
marca	"Ducati"
modelo	"Monster 821"
cilindraje	821
anio	2021
precio	14000
tipo_motor	"L-Twin"
descripcion	"Una moto naked deportiva con estilo italiano."
imagenes	
0	"monster_821_1.jpg"
1	"monster_821_2.jpg"
comentarios	[]
2	
_id	"65130ee5ec6a0291cb8ab6f0"
marca	"BMW"
modelo	"R 1250 GS"
cilindraje	1254
anio	2021
precio	22000
tipo_motor	"Boxer"
descripcion	"Una moto de aventura con tecnología avanzada."
imagenes	
0	"r_1250_gs_1.jpg"
1	"r_1250_gs_2.jpg"
comentarios	[]
2	
_id	"65132382ec6a0291cb8ab723"
nombre	"Casco Full Face"
descripcion	"Casco de alto rendimiento con visera y ventilación."
precio	"1970-01-01T00:00:00.250Z"
modelo_moto_compatible	
0	null
1	
_id	"65130ee5ec6a0291cb8ab6ef"
marca	"Ducati"
modelo	"Monster 821"
cilindraje	821
anio	2021
precio	14000
tipo_motor	"L-Twin"
descripcion	"Una moto naked deportiva con estilo italiano."
imagenes	
0	"monster_821_1.jpg"
1	"monster_821_2.jpg"
comentarios	[]
3	
_id	"65132382ec6a0291cb8ab726"
nombre	"Top Case"
descripcion	"Baúl trasero espacioso para almacenar equipaje."
precio	"1970-01-01T00:00:00.180Z"
modelo_moto_compatible	
0	
_id	"65130ee5ec6a0291cb8ab6f0"
marca	"BMW"
modelo	"R 1250 GS"
cilindraje	1254
anio	2021
precio	22000
tipo_motor	"Boxer"
descripcion	"Una moto de aventura con tecnología avanzada."
imagenes	
0	"r_1250_gs_1.jpg"
1	"r_1250_gs_2.jpg"
comentarios	[]
4	
_id	"651323aaec6a0291cb8ab72c"
nombre	"Alforjas"
descripcion	"Alforjas resistentes para llevar equipaje en largos viajes."
precio	"1970-01-01T00:00:00.180Z"
modelo_moto_compatible	
0	
_id	"65130ee5ec6a0291cb8ab6f5"
marca	"Yamaha"
modelo	"MT-09"
cilindraje	889
anio	2021
precio	12000
tipo_motor	"Inline-three"
descripcion	"Una moto naked versátil y emocionante."
imagenes	
0	"mt_09_1.jpg"
1	"mt_09_2.jpg"
comentarios	[]
1	
_id	"65130ee5ec6a0291cb8ab6f7"
marca	"Aprilia"
modelo	"Tuono V4 1100"
cilindraje	1077
anio	2021
precio	16000
tipo_motor	"V4"
descripcion	"Una moto naked con herencia de competición."
imagenes	
0	"tuono_v4_1100_1.jpg"
1	"tuono_v4_1100_2.jpg"
comentarios	[]
5	
_id	"651323aaec6a0291cb8ab727"
nombre	"Casco Modular"
descripcion	"Casco versátil con visera solar retráctil."
precio	"1970-01-01T00:00:00.280Z"
modelo_moto_compatible	
0	
_id	"65130ee5ec6a0291cb8ab6f1"
marca	"Kawasaki"
modelo	"Ninja ZX-14R"
cilindraje	1441
anio	2021
precio	16000
tipo_motor	"Inline-four"
descripcion	"Una moto deportiva de alto rendimiento."
imagenes	
0	"ninja_zx_14r_1.jpg"
1	"ninja_zx_14r_2.jpg"
comentarios	[]
1	
_id	"65130ee5ec6a0291cb8ab6f2"
marca	"Honda"
modelo	"CBR1000RR"
cilindraje	999
anio	2021
precio	17500
tipo_motor	"Inline-four"
descripcion	"Una superbike líder en el mercado."
imagenes	
0	"cbr1000rr_1.jpg"
1	"cbr1000rr_2.jpg"
comentarios	[]
6	
_id	"651323aaec6a0291cb8ab72a"
nombre	"Protector de Tanque"
descripcion	"Película protectora transparente para el tanque de la moto."
precio	"1970-01-01T00:00:00.020Z"
modelo_moto_compatible	
0	
_id	"65130ee5ec6a0291cb8ab6f3"
marca	"Suzuki"
modelo	"Hayabusa"
cilindraje	1340
anio	2021
precio	18500
tipo_motor	"Inline-four"
descripcion	"Una moto legendaria de alta velocidad."
imagenes	
0	"hayabusa_1.jpg"
1	"hayabusa_2.jpg"
comentarios	[]
1	
_id	"65130ee5ec6a0291cb8ab6f4"
marca	"Triumph"
modelo	"Speed Triple RS"
cilindraje	1050
anio	2021
precio	15500
tipo_motor	"Inline-three"
descripcion	"Una moto naked con carácter y rendimiento."
imagenes	
0	"speed_triple_rs_1.jpg"
1	"speed_triple_rs_2.jpg"
comentarios	[]
7	
_id	"651323aaec6a0291cb8ab728"
nombre	"Chaqueta Textil"
descripcion	"Chaqueta resistente al agua para condiciones climáticas adversas."
precio	"1970-01-01T00:00:00.300Z"
modelo_moto_compatible	
0	
_id	"65130ee5ec6a0291cb8ab6f1"
marca	"Kawasaki"
modelo	"Ninja ZX-14R"
cilindraje	1441
anio	2021
precio	16000
tipo_motor	"Inline-four"
descripcion	"Una moto deportiva de alto rendimiento."
imagenes	
0	"ninja_zx_14r_1.jpg"
1	"ninja_zx_14r_2.jpg"
comentarios	[]
1	
_id	"65130ee5ec6a0291cb8ab6f2"
marca	"Honda"
modelo	"CBR1000RR"
cilindraje	999
anio	2021
precio	17500
tipo_motor	"Inline-four"
descripcion	"Una superbike líder en el mercado."
imagenes	
0	"cbr1000rr_1.jpg"
1	"cbr1000rr_2.jpg"
comentarios	[]
2	
_id	"65130ee5ec6a0291cb8ab6f3"
marca	"Suzuki"
modelo	"Hayabusa"
cilindraje	1340
anio	2021
precio	18500
tipo_motor	"Inline-four"
descripcion	"Una moto legendaria de alta velocidad."
imagenes	
0	"hayabusa_1.jpg"
1	"hayabusa_2.jpg"
comentarios	[]
8	
_id	"651323aaec6a0291cb8ab72b"
nombre	"Soporte para Teléfono"
descripcion	"Soporte ajustable para montar el teléfono en el manillar."
precio	"1970-01-01T00:00:00.040Z"
modelo_moto_compatible	
0	
_id	"65130ee5ec6a0291cb8ab6f5"
marca	"Yamaha"
modelo	"MT-09"
cilindraje	889
anio	2021
precio	12000
tipo_motor	"Inline-three"
descripcion	"Una moto naked versátil y emocionante."
imagenes	
0	"mt_09_1.jpg"
1	"mt_09_2.jpg"
comentarios	[]
1	
_id	"65130ee5ec6a0291cb8ab6f6"
marca	"KTM"
modelo	"1290 Super Duke R"
cilindraje	1301
anio	2021
precio	19500
tipo_motor	"V-Twin"
descripcion	"Una moto naked con rendimiento extremo."
imagenes	
0	"super_duke_r_1.jpg"
1	"super_duke_r_2.jpg"
comentarios	[]
9	
_id	"651323aaec6a0291cb8ab72d"
nombre	"Parabrisas Alto"
descripcion	"Parabrisas alto para una mejor protección contra el viento."
precio	"1970-01-01T00:00:00.120Z"
modelo_moto_compatible	
0	
_id	"65130ee5ec6a0291cb8ab6f7"
marca	"Aprilia"
modelo	"Tuono V4 1100"
cilindraje	1077
anio	2021
precio	16000
tipo_motor	"V4"
descripcion	"Una moto naked con herencia de competición."
imagenes	
0	"tuono_v4_1100_1.jpg"
1	"tuono_v4_1100_2.jpg"
comentarios	[]
10	
_id	"651323aaec6a0291cb8ab729"
nombre	"Botas de Moto"
descripcion	"Botas de alta calidad con protección para tobillos y espinillas."
precio	"1970-01-01T00:00:00.150Z"
modelo_moto_compatible	
0	
_id	"65130ee5ec6a0291cb8ab6f2"
marca	"Honda"
modelo	"CBR1000RR"
cilindraje	999
anio	2021
precio	17500
tipo_motor	"Inline-four"
descripcion	"Una superbike líder en el mercado."
imagenes	
0	"cbr1000rr_1.jpg"
1	"cbr1000rr_2.jpg"
comentarios	[]
1	
_id	"65130ee5ec6a0291cb8ab6f3"
marca	"Suzuki"
modelo	"Hayabusa"
cilindraje	1340
anio	2021
precio	18500
tipo_motor	"Inline-four"
descripcion	"Una moto legendaria de alta velocidad."
imagenes	
0	"hayabusa_1.jpg"
1	"hayabusa_2.jpg"
comentarios	[]
11	
_id	"651f463b5cf19ba72d4e6406"
nombre	"ejkshij si"
descripcion	"Guantes de alto osjbigjbij para un agarre óptimo."
precio	"1970-01-01T00:00:00.080Z"
modelo_moto_compatible	[]
createdAt	"2023-10-05T23:26:51.521Z"
updatedAt	"2023-10-05T23:26:51.521Z"
__v	0

este es mi json y esta es la url = http://localhost:7777/api/Accesorios



necesito que cambies el read el create y el update de arriba por los datos valores y links de mi json y de lo que te acabo de pasar